{"ast":null,"code":"var _jsxFileName = \"/Users/cbworkstation/Learning/React Course/monsters-rolodex/src/App.js\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      //JS doesn't set the scope of \"this\" on functions\n      //arrow functions automatically binds \"this.\" Lexical scoping. You can't call .bind on them. \n      this.setState({\n        searchField: e.target.value\n      });\n    };\n\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    }; //.bind = method on any function that returns a new function where the context of \"this\" is whatever we pass to it. \n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        placeholder: \"search monsters\",\n        handleChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        monsters: filteredMonsters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cbworkstation/Learning/React Course/monsters-rolodex/src/App.js"],"names":["Component","CardList","SearchBox","App","constructor","handleChange","e","setState","searchField","target","value","state","monsters","bind","componentDidMount","fetch","then","response","json","users","render","filteredMonsters","filter","monster","name","toLowerCase","includes","toLocaleLowerCase"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,QAAT,QAAyB,4CAAzB;AACA,SAASC,SAAT,QAA0B,8CAA1B;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC3BI,EAAAA,WAAW,GAAG;AACb;;AADa,SAkBbC,YAlBa,GAkBGC,CAAD,IAAO;AACpB;AAEA;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAxB,OAAd;AACD,KAvBY;;AAGb,SAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAE,EADE;AAEZJ,MAAAA,WAAW,EAAE;AAFD,KAAb,CAHa,CAOX;;AAEA,SAAKH,YAAL,GAAoB,KAAKA,YAAL,CAAkBQ,IAAlB,CAAuB,IAAvB,CAApB;AACF;;AAEDC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACEC,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEQG,KAAD,IAAW,KAAKZ,QAAL,CAAc;AAAEK,MAAAA,QAAQ,EAAEO;AAAZ,KAAd,CAFlB;AAGA;;AASDC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAER,MAAAA,QAAF;AAAYJ,MAAAA;AAAZ,QAA4B,KAAKG,KAAvC;AACA,UAAMU,gBAAgB,GAAGT,QAAQ,CAACU,MAAT,CAAiBC,OAAD,IACxCA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoClB,WAAW,CAACmB,iBAAZ,EAApC,CADwB,CAAzB;AAGA,wBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACC,QAAC,SAAD;AACC,QAAA,WAAW,EAAC,iBADb;AAEC,QAAA,YAAY,EAAE,KAAKtB;AAFpB;AAAA;AAAA;AAAA;AAAA,cADD,eAKC,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEgB;AAApB;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AAxC0B;;AA2C5B,eAAelB,GAAf","sourcesContent":["import { Component } from \"react\";\n\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: \"\",\n\t\t};\n    //.bind = method on any function that returns a new function where the context of \"this\" is whatever we pass to it. \n\n    this.handleChange = this.handleChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((users) => this.setState({ monsters: users }));\n\t}\n\n  handleChange = (e) => {\n    //JS doesn't set the scope of \"this\" on functions\n\n    //arrow functions automatically binds \"this.\" Lexical scoping. You can't call .bind on them. \n    this.setState({ searchField: e.target.value})\n  }\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder=\"search monsters\"\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}